rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public read access to items
    match /items/{itemId} {
      allow read: if true;
      allow write: if request.auth != null && 
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User profile access
    match /users/{userId} {
      allow read, write: if request.auth != null && 
                        (request.auth.uid == userId || 
                         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Orders access
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                  (resource.data.userId == request.auth.uid || 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Token requests
    match /tokenRequests/{requestId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                  (resource.data.userId == request.auth.uid || 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Notifications
    match /notifications/{notificationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                  (resource.data.userId == request.auth.uid || 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Temporary debug rule (remove in production)
    match /{document=**} {
      allow read, write: if false;
    }

    // Temporary fallback rule for debugging (remove in production)
    // match /{document=**} {
    //   allow read, write: if request.auth != null;
    // }
  }
}
